{"version":3,"sources":["utils/auth.ts","utils/remote.ts","utils/redux/user/index.ts","utils/redux/global/index.ts","utils/redux/index.ts","utils/redux/config/index.ts","utils/redux/ui/index.ts","features/components/navigation/Footer/index.tsx","features/pages/affiliates/Landing/index.tsx","features/components/routes/Affiliate/index.tsx","features/components/routes/Root/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["getToken","localStorage","getItem","SERVER_ADDRESS","process","REACT_APP_SERVER_ADDRESS","genDefaultHeaders","Authorization","get","url","options","headers","otherOptions","fetch","method","then","handleErrors","res","status","dispatch","type","payload","json","defaultState","snackbar","message","id","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","reducerDic","config","state","action","undefined","rawAddedActivities","rawWontDoActivities","rawCompletedActivities","rawMaterials","rawMaterialTypes","dashboardTabs","addedActivities","JSON","parse","wontDoActivities","completedActivities","materials","materialTypes","ages","subjects","ordinal","touched","uuid","v4","getDefaultState","flush","data","nextState","Object","keys","reduce","acc","curr","setItem","stringify","body","put","user","token","jwt","decode","global","key","ui","defaultObj","dashboard","tab","isEditing","credits","count","hasNew","reducer","store","createStore","clear","useStyles","makeStyles","root","padding","ul","listStyleType","Footer","classes","Container","className","maxWidth","Grid","container","item","to","useMastStyles","color","backgroundImage","width","height","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","position","titleWrapper","top","right","title","display","subtitle","fontStyle","signup","backgroundColor","colors","red","signupWrapper","margin","login","useSubjectStyles","grey","left","boxes","borderRadius","useAgeStyles","useMaterialStyles","AffiliateLanding","mastClasses","subjectClasses","ageClasses","materialClasses","signupButton","Button","fullWidth","disableGutters","justify","alignItems","xs","Typography","align","variant","Box","m","Divider","md","sm","p","href","target","AffiliateRoutes","exact","path","RootRoutes","REACT_APP_AFFILIATE","theme","createMuiTheme","palette","primary","main","blue","App","Wrap","Router","HashRouter","children","value","fetcher","arg1","args","utils","DateFnsUtils","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9076d05.chunk.js","sourcesContent":["\nexport const setToken = (token: string)=>{\n  localStorage.setItem('token', token);\n}\n\nexport const getToken = ()=>localStorage.getItem('token');\n","import qs from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { mergeWith, isArray } from 'lodash';\nimport { dispatch } from './redux';\nimport { getToken } from './auth';\nimport lscache from 'lscache';\nimport { createUserAction } from './redux/user';\n\nexport const SERVER_ADDRESS = process.env.REACT_APP_SERVER_ADDRESS || \"\";\nconst genDefaultHeaders = ()=>({\n  Authorization: getToken() ? `Bearer ${getToken()}` : '',\n  'Content-Type': 'application/json',\n});\n\n// lscache.flush();\nconst post = (url: string, options:any={headers: {}})=>fetch(url, {\n  method: 'POST',\n  headers: {\n    ...genDefaultHeaders(),\n    ...options.headers,\n  },\n  ...options,\n  body: JSON.stringify(options.body),\n}).then(handleErrors);\n\nconst put = (url: string, options: any={headers: {}})=>fetch(url, {\n  method: 'PUT',\n  headers: {\n    ...genDefaultHeaders(),\n    ...options.headers,\n  },\n  ...options,\n  body: JSON.stringify(options.body),\n}).then(handleErrors);\n\nconst del = (url: string, options: any={headers: {}})=>fetch(url, {\n  method: 'DELETE',\n  headers: {\n    ...genDefaultHeaders(),\n    ...options.headers,\n  },\n  ...options,\n}).then(handleErrors);\n\nconst get = (url: string, options: any={headers: {}})=>{\n  const {headers, ...otherOptions} = options;\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      ...genDefaultHeaders(),\n      ...headers,\n    },\n    ...otherOptions,\n  }).then(handleErrors);\n}\n\nconst handleErrors = (res: any)=>{\n  if(res.status === 401){\n    dispatch(createUserAction(null));\n  }\n  if(res.status >= 400){\n    throw res\n  }\n  return res.json();\n}\n\nconst customMerge = function (objValue: any, srcValue: any) {\n  if (isArray(objValue)){\n    return objValue;\n  }\n  if(objValue !== undefined){\n    return objValue\n  }\n}\n\nconst useCustomSwr = (apiKey: string, options:any={})=>{\n  const [ page, setPage ] = useState(0);\n  const [ data, setData ] = useState<any>(options.defaultValue || null);\n  const [ noMoreContent, setNoMoreContent ] = useState(false);\n  const incrementPage = ()=>setPage(page+1);\n  const resetPage = ()=>setPage(0);\n  \n  useEffect(()=>{\n    let suffix='';\n    if(options.query){\n      suffix=qs.stringify({\n        ...options.query,\n        ...(options.page ? {\n          page\n        } : {}),\n      }, {arrayFormat: 'bracket'})\n    }\n    const url = apiKey+(suffix ? '?' + suffix : suffix);\n    let dataRequest\n    if(options.cache && lscache.get(url)){\n      dataRequest = Promise.resolve(JSON.parse(lscache.get(url)));\n    } else {\n      dataRequest = get(url, options.requestOptions)\n      .then((json)=>{\n        if(options.cache){\n          lscache.set(url, JSON.stringify(json), 10);\n        }\n        return json;\n      });\n    }\n    dataRequest.then((res)=>{\n      if(page){\n        if(!res.length){\n          setNoMoreContent(true)\n        }\n        return setData(data.concat(res))\n      }\n      return setData(res);\n    });\n  }, (options.deps || []).concat([page]));\n  const mutate = (nextData: any)=>{\n    const mergeResults = mergeWith({...nextData}, data, customMerge);\n    setData(mergeResults);\n  }\n  return { data, mutate, incrementPage, resetPage, page, noMoreContent }\n}\n\nexport {\n  get,\n  post,\n  put,\n  del,\n  useCustomSwr,\n}","import jwt from 'jsonwebtoken';\nimport { getToken, setToken } from '../../auth';\n\nexport const DEFAULT_USER_TYPE = 'DEFAULT_USER_TYPE';\n\nconst getDefaultState = ()=>{\n  const token = getToken();\n  return token ? jwt.decode(token) : null\n}\n\nexport const reducer = (state: any, action: any)=>{\n  if(state === undefined){\n    state = getDefaultState();\n  }\n  if(action.type === DEFAULT_USER_TYPE){\n    setToken(action.payload);\n    if(!action.payload) return action.payload;\n    return jwt.decode(action.payload)\n  } \n  return state;\n}\n\nexport const createUserAction = (payload: any)=>{\n  return {\n    type: DEFAULT_USER_TYPE,\n    payload,\n  }\n}\n\n\n\nexport const userSelector = (state: any)=>state.user","export const DEFAULT_GLOBAL_TYPE = 'DEFAULT_GLOBAL_TYPE';\n\nconst defaultState = {\n  snackbar: {\n    message: '',\n    id: ''\n  },\n};\n\nexport const reducer = (state=defaultState, action: any)=>{\n    if(action.type === DEFAULT_GLOBAL_TYPE){\n      return Object.keys(action.payload).reduce((acc: any, key)=>{\n        acc[key]=action.payload[key];\n        return acc\n      }, {...state})\n    }\n    return state;\n}\n\nexport const createGlobalAction = (payload: any)=>{\n  return {\n    type: DEFAULT_GLOBAL_TYPE,\n    payload,\n  }\n}\n\n\n\nexport const globalSelector = (state: any)=>state.global","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk';\nimport { reducer as config } from './config';\nimport { reducer as user } from './user';\nimport { reducer as global } from './global';\nimport { reducer as ui } from './ui';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk),\n);\n\nconst reducerDic : any = {\n  config,\n  user,\n  global,\n  ui\n};\n\nconst reducer = (state: any = {}, action: any)=>{\n  return Object.keys(reducerDic).reduce((acc, key)=>{\n    acc[key] = reducerDic[key](state[key], action);\n    return acc;\n  }, state)\n}\n\nexport const storeGenerator = ()=>createStore((state, action)=>{\n  if(action.type === 'RESET'){\n    localStorage.clear();\n    return reducer(undefined, action);\n  }\n  return reducer(state, action);\n}, enhancer);\n\nexport const store = storeGenerator()\n\nexport const dispatch = store.dispatch","import {v4} from 'uuid';\nimport { SERVER_ADDRESS, put } from '../../remote';\nexport const DEFAULT_CONFIG_TYPE = 'DEFAULT_CONFIG_TYPE';\n\ninterface $state {\n    addedActivities: {[id: string]: {\n      inSchedule?: Boolean,\n      ordinal: number,\n    }},\n    wontDoActivities: {[id: string]: Boolean},\n    completedActivities: {[id: string]: Boolean},\n    materials: {[id: string]: Boolean},\n    materialTypes: {[id: string]: Boolean},\n    dashboardTabs: {\n      name?: string,\n      ages: string[],\n      subjects: string[],\n      ordinal: number,\n      touched: Boolean,\n      uuid: string,\n    }[]\n}\nconst getDefaultState = ()=>{\n  const rawAddedActivities = localStorage.getItem('addedActivities');\n  const rawWontDoActivities = localStorage.getItem('wontDoActivities');\n  const rawCompletedActivities = localStorage.getItem('completedActivities');\n  const rawMaterials = localStorage.getItem('materials');\n  const rawMaterialTypes = localStorage.getItem('materialTypes');\n  const dashboardTabs = localStorage.getItem('dashboardTabs');\n\n  const defaultState : $state = {\n    addedActivities: rawAddedActivities ? JSON.parse(rawAddedActivities) : {},\n    wontDoActivities: rawWontDoActivities ? JSON.parse(rawWontDoActivities) : {},\n    completedActivities: rawCompletedActivities ? JSON.parse(rawCompletedActivities) : {},\n    materials: rawMaterials ? JSON.parse(rawMaterials) : {},\n    materialTypes: rawMaterialTypes ? JSON.parse(rawMaterialTypes) : {},\n    dashboardTabs: dashboardTabs ? JSON.parse(dashboardTabs) : [\n      {\n        ages: [],\n        subjects: [],\n        ordinal: 0,\n        touched: false,\n        uuid: v4()\n      }\n    ]\n  };\n  return defaultState;\n}\n\nexport const reducer = (state: $state, action: any)=>{\n  if(state === undefined){\n    state = getDefaultState()\n  }\n  if(action.type === DEFAULT_CONFIG_TYPE){\n    if(action.payload.flush){\n      return action.payload.data\n    }\n    const nextState = Object.keys(action.payload).reduce((acc: any, curr: string)=>{\n      acc[curr] = action.payload[curr];\n      localStorage.setItem(curr, JSON.stringify(action.payload[curr]))\n      return acc;\n    }, {...state});\n    put(SERVER_ADDRESS+'/users/config', {\n      body: action.payload\n    });\n    return nextState;\n  }\n  return state;\n}\n\nexport const createConfigAction = (payload: any)=>{\n  return {\n    type: DEFAULT_CONFIG_TYPE,\n    payload,\n  }\n}\n\ninterface $globalState {\n  config: $state\n}\n\nexport const configSelector = (state: $globalState)=>state.config\nexport const dashboardTabsSelector = (state: $globalState)=>state.config.dashboardTabs;\nexport const materialsSelector = (state: $globalState)=>state.config.materials;\nexport const materialTypesSelector = (state: $globalState)=>state.config.materialTypes;\nexport const addedActivitiesSelector = (state: $globalState)=>state.config.addedActivities;\nexport const wontDoActivitiesSelector = (state: $globalState)=>state.config.wontDoActivities;\nexport const completedActivitiesSelector = (state: $globalState)=>state.config.completedActivities;\nexport const addedActivitySelector = (id: string)=>(state: $globalState)=>state.config.addedActivities[id];\nexport const wontDoActivitySelector = (id: string)=>(state: $globalState)=>state.config.wontDoActivities[id];\nexport const completedActivitySelector = (id: string)=>(state: $globalState)=>state.config.completedActivities[id];\n","export const DEFAULT_UI_TYPE = 'DEFAULT_UI_TYPE';\n\nconst getDefaultState = ()=>{\n  const ui = localStorage.getItem('ui');\n\n  const defaultObj = {\n    dashboard: {\n      tab: 0,\n      isEditing: true\n    },\n    addedActivities: {\n      tab: 0,\n    },\n    credits: {\n      count: 0,\n      hasNew: false\n    }\n  };\n  return ui ? {\n    ...defaultObj,\n    ...JSON.parse(ui)\n  } : defaultObj;\n}\n\n\n\n\nexport const reducer = (state: any, action: any)=>{\n  if(state === undefined){\n    state = getDefaultState();\n  }\n  if(action.type === DEFAULT_UI_TYPE){\n    const nextState = Object.keys(action.payload).reduce((acc: any, key)=>{\n      acc[key]=action.payload[key];\n      return acc\n    }, {...state})\n    localStorage.setItem('ui', JSON.stringify(nextState))\n    return nextState\n  }\n  return state;\n}\n\nexport const createUIAction = (payload: any)=>{\n  return {\n    type: DEFAULT_UI_TYPE,\n    payload,\n  }\n}\n\nexport const uiSelector = (state: any)=>state.ui\nexport const uiCreditsSelector = (state: any)=>state.ui.credits","import React from 'react';\nimport { Grid, Container } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2rem'\n  },\n  ul: {\n    listStyleType: 'none'\n  }\n})\n\nexport default function Footer(){\n  const classes = useStyles();\n  return <Container className={classes.root} maxWidth=\"sm\">\n    <Grid container>\n      <Grid item>\n        <ul className={classes.ul}>\n          <li><Link to=\"/contact\">Contact Us</Link></li>\n        </ul>\n      </Grid>\n    </Grid>\n  </Container>\n}","import React from 'react';\nimport { colors, Button } from '@material-ui/core';\nimport { Container, makeStyles, Typography, Grid } from '@material-ui/core';\n\nimport { Link } from 'react-router-dom';\nimport { Divider } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\n\n\n\nconst useMastStyles = makeStyles({\n  root: {\n    color: '#fff',\n    backgroundImage: \"url('https://images.unsplash.com/photo-1469571486292-0ba58a3f068b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80')\",\n    width: '100%',\n    height: '100vh',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'scroll',\n    backgroundSize: 'cover',\n    position: 'relative'\n  },\n  titleWrapper: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n  },\n  title: {\n    display: 'inline-block',\n  },\n  subtitle: {\n    display: \"inline-block\",\n    fontStyle: 'italic',\n  },\n  signup: {\n    backgroundColor: colors.red['A100'],\n  },\n  signupWrapper: {\n    width: '200px',\n    margin: '2rem auto',\n  },\n  login: {\n    backgroundColor: colors.red['A100'],\n    position: 'absolute',\n    top: 20,\n    right: 10,\n    width: '150px',\n  }\n})\n\nconst useSubjectStyles = makeStyles({\n  root: {\n    padding: '5rem',\n    // backgroundColor: colors.teal['A100']\n    backgroundColor: colors.grey[50]\n  },\n  title: {\n    position: 'absolute',\n    top: 10,\n    left: 10,\n  },\n  boxes: {\n    color: '#FFF',\n    backgroundSize: 'cover',\n    height: '200px',\n    width: '180px',\n    display: 'inline-block',\n    margin: '1rem',\n    borderRadius: '0.5rem'\n  }\n})\n\nconst useAgeStyles = makeStyles({\n  root: {\n    // padding: '5rem',\n    // backgroundColor: colors.teal['A100']\n    backgroundImage: \"url('https://images.unsplash.com/photo-1518398046578-8cca57782e17?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80')\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    height: '400px',\n    width: '100%',\n  },\n  // img: {\n    \n  //   width: '400px',\n  //   height: '200px',\n  // }\n})\n\nconst useMaterialStyles = makeStyles({\n  root: {\n    // padding: '5rem',\n    backgroundColor: colors.red['A100']\n    // height: '400px',\n    // width: '100%',\n  },\n  // img: {\n    \n  //   width: '400px',\n  //   height: '200px',\n  // }\n})\n\n\n\n/**\n * Find activities by subject\n * Use age restrictions\n * Add activities to your schedule\n * Get the materials in each activity\n */\n\n\n \nexport default function AffiliateLanding(){\n\n  const Bx = ({url, tag}: {url: string, tag: string})=><Grid container justify=\"center\" alignItems=\"flex-end\" className={subjectClasses.boxes}\n    style={{\n      backgroundImage: `url('${url}')`\n  }}>\n    <Grid item>\n      <Typography>#{tag}</Typography>\n    </Grid>\n  </Grid>\n  const mastClasses = useMastStyles();\n  const subjectClasses = useSubjectStyles();\n  const ageClasses = useAgeStyles();\n  const materialClasses = useMaterialStyles();\n  const signupButton = <div className={mastClasses.signupWrapper}><Link to=\"/signup\"><Button fullWidth className={mastClasses.signup}>Signup Now</Button></Link></div>\n  return <Container disableGutters>\n    <Grid className={mastClasses.root} container justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"h2\">Build technology. For good.</Typography>\n        <Typography align=\"center\" variant=\"h6\">A nonprofit that strengthens charities and nonprofits around the world through technology</Typography>\n\n        \n\n        {\n          signupButton\n        }\n      </Grid>\n      <div className={mastClasses.titleWrapper}>\n        <Typography variant=\"h5\" className={mastClasses.subtitle}>engineering@</Typography>\n        <Typography variant=\"h5\" className={mastClasses.title}>DigLit</Typography>\n        \n      </div>\n      {\n        // <Link to=\"/login\"><Button className={mastClasses.login}>Login</Button></Link>\n      }\n    </Grid>\n    <Grid container className={subjectClasses.root} justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Typography align=\"center\" variant=\"h6\">Problem Statement</Typography>\n        <Box m=\"1rem 0\">\n          <Divider />\n        </Box>\n        <Box maxWidth=\"500px\">\n        <Typography variant=\"body1\">Technology doesn't work for nonprofits. Technology requires access to capital that nonprofits do not have access to. In addition to this, many nonprofits have budgets that simply do not allow for technology upkeep.</Typography>\n        </Box>\n      </Grid>\n    </Grid>\n    <Grid container className={materialClasses.root} justify=\"center\" alignItems=\"center\">\n      <Grid item md={6} sm={12}>\n        <Box p=\"3rem\">\n          <Typography align=\"right\" variant=\"h6\">A DigLit Solution</Typography>\n          <Box m=\"1rem 0\">\n            <Divider />\n          </Box>\n          <Typography variant=\"body1\">DigLit acts as the engineering branch of every nonprofit who seeks our help, regardless of their size. We build custom software solutions to strengthen nonprofits, but where other organizations release themselves of responsibility once the technology is built, we deploy and maintain the technology for its expected lifespan.</Typography>\n        </Box>\n      </Grid>\n      <Grid className={ageClasses.root} item md={6}  sm={12}>\n      </Grid>\n    </Grid>\n    <Grid container className={subjectClasses.root} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Grid item>\n            <Typography align=\"right\" variant=\"h6\">How we choose nonprofits to help</Typography>\n            <Box m=\"1rem 0\">\n              <Divider />\n            </Box>\n            <Box maxWidth=\"500px\">\n              <Typography variant=\"body1\">We evaluate nonprofits generally on two factors: The amount of people affected by potential technological changes, and the quality of that impact. </Typography>\n              <Typography variant=\"body1\">Our maiden project is with the Toronto chapter of the <a href=\"https://njt.net/\" target=\"_blank\">Not Just Tourists</a> nonprofit.</Typography>\n            </Box>\n          </Grid> \n        </Grid>\n    </Grid>\n  </Container>\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport AffiliateLanding from '../../../pages/affiliates/Landing';\n\n\nexport default function AffiliateRoutes() {\n  return <>\n    <Route exact path=\"/\"><AffiliateLanding /></Route>\n  </>\n};\n","import React from 'react';\n\nimport { Switch } from 'react-router-dom';\nimport Footer from '../../navigation/Footer';\n\nimport AffiliateRoutes from '../Affiliate';\n\nexport default function RootRoutes() {\n  \n  return <>\n    <Switch>\n      {\n        process.env.REACT_APP_AFFILIATE ? <AffiliateRoutes /> : <AffiliateRoutes />\n      }\n    </Switch>\n    {\n      <Footer />\n    }\n  </>\n};\n\n\n","import 'fontsource-roboto';\n\nimport React from 'react';\n// import { BrowserRouter } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { SWRConfig } from 'swr';\nimport { Provider } from 'react-redux';\n\nimport { store } from './utils/redux';\nimport { get } from './utils/remote';\nimport RootRoutes from './features/components/routes/Root';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { blue } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[700],\n    },\n  },\n});\nfunction App() {\n  return <Wrap store={store}><RootRoutes /></Wrap>;\n}\n\nexport default App;\n\nconst Router = HashRouter;\n\nexport function Wrap({children, store}: { children: JSX.Element, store: any}){\n  return (<SWRConfig\n    value={{\n      // refreshInterval: 3000,\n      fetcher: (arg1, ...args)=>{\n        return get(arg1, ...args)\n      },\n    }}\n    >\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <div>\n            <Router>\n              {\n                children\n              }\n            </Router>\n          </div>\n        </Provider>\n      </ThemeProvider>\n    </MuiPickersUtilsProvider>\n  </SWRConfig>);\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}